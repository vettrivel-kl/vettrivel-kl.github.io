"use strict";(globalThis.webpackChunkvettrivel_com=globalThis.webpackChunkvettrivel_com||[]).push([[885],{5299:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Java/java-methods","title":"java-methods","description":"Syntax","source":"@site/docs/Java/03_java-methods.md","sourceDirName":"Java","slug":"/Java/java-methods","permalink":"/docs/Java/java-methods","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Java/03_java-methods.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"operators","permalink":"/docs/Java/operators"},"next":{"title":"branch-statements","permalink":"/docs/Java/branch-statements"}}');var i=t(4848),a=t(8453);const r={sidebar_position:3},o=void 0,l={},d=[{value:"Syntax",id:"syntax",level:2},{value:"Notes",id:"notes",level:2},{value:"Examples",id:"examples",level:2}];function c(n){const e={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"    return-type methodName(dataType arg1, dataType arg2){\n        ....\n        .... // body of method\n        ....\n        return value;\n    }\n"})}),"\n",(0,i.jsx)(e.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["If it is not returning anything use ",(0,i.jsx)(e.code,{children:"void"})]}),"\n",(0,i.jsxs)(e.li,{children:["In the method, if it's not returning anything you can skip return or use just ",(0,i.jsx)(e.code,{children:"return;"})]}),"\n",(0,i.jsx)(e.li,{children:"To call the method, use method name"}),"\n",(0,i.jsx)(e.li,{children:"write methods in class definition block"}),"\n",(0,i.jsx)(e.li,{children:"If return type is mentioned compulsorily it should return the value of type mentioned"}),"\n",(0,i.jsx)(e.li,{children:"If return type is mentioned as void and returns something from method, it will return error"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(e.p,{children:"Ex1:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'class Demo20{\n    public static void main(String[] args) {\n        System.out.println("main starts");\n        int i = test();\n        System.out.println("i= " + i);\n        System.out.println("main ends");\n    }\n    \n    static int test(){\n        System.out.println("inside test method");\n        return 100;\n    }\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:"output:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"    main starts\n    inside test method\n    i= 100\n    main ends\n"})}),"\n",(0,i.jsx)(e.p,{children:"Ex2:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'class Demo21{\n    public static void main(String[] args) {\n        System.out.println("main starts");\n        int i = 0;\n        int j;\n        j = test(i) + ++i + i++;\n\n        System.out.println("i= " + i);\n        System.out.println("j= " + j);\n        System.out.println("main ends");\n    }\n    \n    static int test(int a){\n        System.out.println("a =" + a++);\n        return ++a;\n    }\n}\n'})})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>o});var s=t(6540);const i={},a=s.createContext(i);function r(n){const e=s.useContext(a);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),s.createElement(a.Provider,{value:e},n.children)}}}]);